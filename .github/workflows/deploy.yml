name: Deploy Lightcone to Digital Ocean
on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Debug Information
        run: |
          echo "Server Host Length: ${#SERVER_HOST}"
          echo "Server User Length: ${#SERVER_USER}"
          echo "SSH Key Present: ${{ secrets.SSH_PRIVATE_KEY != '' }}"
          echo "GH Key Present: ${{ secrets.GH_SSH_KEY != '' }}"
        env:
          SERVER_HOST: ${{ secrets.SERVER_HOST }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: ${{ secrets.SSH_KNOWN_HOSTS }}
      # Add runner's IP to existing firewall first
      - name: Doorkeeper open
        uses: patoroco/doorkeeper@master
        with:
          digitaloceanToken: ${{ secrets.DIGITALOCEAN_TOKEN }}
          firewallName: "web-firewall"
          actionToDo: "add"
          dryRun: false
      - name: Deploy to Digital Ocean
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          command_timeout: "30m"
          script: |
            # Ensure directory exists (note different directory)
            mkdir -p /root/lightcone
            cd /root/lightcone

            # SSH setup (same as backend)
            mkdir -p ~/.ssh
            ssh-keyscan github.com >> ~/.ssh/known_hosts
            if [ ! -f ~/.ssh/github ]; then
              echo "${{ secrets.GH_SSH_KEY }}" > ~/.ssh/github
              chmod 600 ~/.ssh/github
              echo -e "Host github.com\n  IdentityFile ~/.ssh/github\n  StrictHostKeyChecking no" > ~/.ssh/config
            fi

            # Clean up only this stack's containers
            docker-compose down || true

            # Test GitHub SSH connection
            ssh -T git@github.com || true

            # Clone or pull repository (update repo URL)
            if [ ! -d ".git" ]; then
              echo "Cloning repository..."
              git clone git@github.com:corpus-relica/lightcone .
            else
              echo "Updating repository..."
              git fetch origin
              git reset --hard origin/main
            fi

            # Start the application
            echo "Starting docker compose..."
            docker-compose down || true
            docker-compose build
            docker-compose up -d
      # Remove runner's IP from new firewall
      - name: Doorkeeper close
        if: always()
        uses: patoroco/doorkeeper@master
        with:
          digitaloceanToken: ${{ secrets.DIGITALOCEAN_TOKEN }}
          firewallName: "web-firewall"
          actionToDo: "remove"
          dryRun: false
